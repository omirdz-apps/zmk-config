#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // antes 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25    // antes 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// Escaladores de movimiento y scroll
&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };
&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

// Scroll config
&msc {
   acceleration-exponent = <1>;
   time-to-max-speed-ms = <100>;
   delay-ms = <0>;
};

// Mouse move config
&mmv {
   time-to-max-speed-ms = <500>;
   acceleration-exponent = <1>;
   trigger-period-ms = <16>;
};

// Apagado suave
&soft_off { hold-time-ms = <2000>; };

// =========================
// BEHAVIORS
// =========================
/ {
      behaviors {
         td_SHFT: td_SHFT {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
         };

         td_a: td_a {
            compatible = "zmk,behavior-tap-dance";
            display-name = "a/á Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp A>, <&mac_a>;
         };

         td_c: td_c {
            compatible = "zmk,behavior-tap-dance";
            display-name = "c/copy Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp C>, <&mac_ctrl_c>;
         };

         td_e: td_e {
            compatible = "zmk,behavior-tap-dance";
            display-name = "e/é Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp E>, <&mac_e>;
         };

         td_f: td_f {
            compatible = "zmk,behavior-tap-dance";
            display-name = "f/Search Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp F>, <&mac_ctrl_f>;
         };

         td_i: td_i {
            compatible = "zmk,behavior-tap-dance";
            display-name = "i/í Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp I>, <&mac_i>;
         };

         td_k: td_k {
            compatible = "zmk,behavior-tap-dance";
            label = "PortaPapeles";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp K>, <&mac_win_v>;
         };

         td_l: td_l {
            compatible = "zmk,behavior-tap-dance";
            label = "Bloqueo";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp L>, <&mac_win_l>;
         };
         
         td_n: td_n {
            compatible = "zmk,behavior-tap-dance";
            display-name = "n/ñ Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp N>, <&mac_n>;
         };

         td_o: td_o {
            compatible = "zmk,behavior-tap-dance";
            display-name = "o/ó Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp O>, <&mac_o>;
         };

         td_s: td_s {
            compatible = "zmk,behavior-tap-dance";
            label = "Capturar";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp S>, <&mac_win_shift_s>;
         };

         td_u: td_u {
            compatible = "zmk,behavior-tap-dance";
            display-name = "u/ú Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp U>, <&mac_u>;
         };

         td_v: td_v {
            compatible = "zmk,behavior-tap-dance";
            display-name = "v/Paste Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp V>, <&mac_ctrl_v>;
         };

         td_x: td_x {
            compatible = "zmk,behavior-tap-dance";
            display-name = "x/Cut Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp X>, <&mac_ctrl_x>;
         };
         
         td_y: td_y {
            compatible = "zmk,behavior-tap-dance";
            display-name = "y/Redo Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp Y>, <&mac_ctrl_y>;
         };
         
         td_z: td_z {
            compatible = "zmk,behavior-tap-dance";
            display-name = "z/Undo Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp Z>, <&mac_ctrl_z>;
         };
         
         td_sdq: td_sdq {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Single/Double Quotes Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp SQT>, <&kp DQT>;
         };
         
         td_clt: td_clt {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Comma/LessThan Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp COMMA>, <&kp LT>;
         };
         
         td_dgt: td_dgt {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Dot/GreaterThan Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp DOT>, <&kp GT>;
         };
         
         td_sc: td_sc {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Semicolon/Colon Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp SEMI>, <&kp COLON>;
         };
      };

      macros {
         mac_a: mac_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
               <&macro_press   &kp LALT>,
               <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N5>,
               <&macro_release &kp LALT>;
         };

         mac_e: mac_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
               <&macro_press   &kp LALT>,
               <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N3>,
               <&macro_release &kp LALT>;
         };

         mac_i: mac_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
               <&macro_press   &kp LALT>,
               <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7>,
               <&macro_release &kp LALT>;
         };

         mac_o: mac_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
               <&macro_press   &kp LALT>, 
               <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N3>,
               <&macro_release &kp LALT>;
         };

         mac_u: mac_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
               <&macro_press   &kp LALT>,
               <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N0>,
               <&macro_release &kp LALT>;
         };

         mac_n: mac_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
               <&macro_press   &kp LALT>,
               <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N1>,
               <&macro_release &kp LALT>;
         };

         mac_oq: mac_oq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
               <&macro_press   &kp LALT>,
               <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N8>,
               <&macro_release &kp LALT>;
         };

         mac_ctrl_c: mac_ctrl_c {
            compatible = "zmk,behavior-macro";
            label = "Ctrl+C";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press   &kp LEFT_CONTROL>,
               <&macro_tap     &kp C>,
               <&macro_release &kp LEFT_CONTROL>;
         };
         
         mac_ctrl_f: mac_ctrl_f {
            compatible = "zmk,behavior-macro";
            label = "Ctrl+F";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press   &kp LEFT_CONTROL>,
               <&macro_tap     &kp F>,
               <&macro_release &kp LEFT_CONTROL>;
         };

         mac_ctrl_v: mac_ctrl_v {
            compatible = "zmk,behavior-macro";
            label = "Ctrl+V";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press   &kp LEFT_CONTROL>,
               <&macro_tap     &kp V>,
               <&macro_release &kp LEFT_CONTROL>;
         };

         mac_ctrl_x: mac_ctrl_x {
            compatible = "zmk,behavior-macro";
            label = "Ctrl+X";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press   &kp LEFT_CONTROL>,
               <&macro_tap     &kp X>,
               <&macro_release &kp LEFT_CONTROL>;
         };
         
         mac_ctrl_y: mac_ctrl_y {
            compatible = "zmk,behavior-macro";
            label = "Ctrl+Y";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press   &kp LEFT_CONTROL>,
               <&macro_tap     &kp Y>,
               <&macro_release &kp LEFT_CONTROL>;
         };

         mac_ctrl_z: mac_ctrl_z {
            compatible = "zmk,behavior-macro";
            label = "Ctrl+Z";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press   &kp LEFT_CONTROL>,
               <&macro_tap     &kp Z>,
               <&macro_release &kp LEFT_CONTROL>;
         };
 
         mac_win_shift_s: mac_win_shift_s {
            compatible = "zmk,behavior-macro";
            label = "Win+Shift+S";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press   &kp LEFT_GUI>,
               <&macro_press   &kp LEFT_SHIFT>,
               <&macro_tap     &kp S>,
               <&macro_release &kp LEFT_SHIFT>,
               <&macro_release &kp LEFT_GUI>;
         };

         mac_win_l: mac_win_l {
            compatible = "zmk,behavior-macro";
            label = "Win+L";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
               <&macro_press   &kp LEFT_GUI>,
               <&macro_tap     &kp L>,
               <&macro_release &kp LEFT_GUI>;
         };

         mac_win_v: mac_win_v {
            compatible = "zmk,behavior-macro";
            label = "Win+V";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press   &kp LEFT_GUI>,
               <&macro_tap     &kp V>,
               <&macro_release &kp LEFT_GUI>;
         };
      };

      // =========================
      // ENCODERS
      // =========================
      rgb_encoder: rgb_encoder {
         compatible = "zmk,behavior-sensor-rotate";
         #sensor-binding-cells = <0>;
         bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
      };

      scroll_encoder: scroll_encoder {
         compatible = "zmk,behavior-sensor-rotate";
         #sensor-binding-cells = <0>;
         bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
         tap-ms = <100>;
      };

      // =========================
      // COMBOS
      // =========================
      combos {
         compatible = "zmk,combos";

         softoff {
               bindings = <&soft_off>;
               key-positions = <1 15 29>;
         };
      };
   
      // =========================
      // KEYMAP
      // =========================
      keymap {
         compatible = "zmk,keymap";

         // Capa base DVORAK
         default_layer {
            display-name = "DVORAK";
            bindings = <
               &kp ESC   &td_sdq  &td_clt  &td_dgt  &kp P      &td_y                           &kp UP                 &td_f        &kp G     &td_c   &kp R  &td_l  &kp BSPC
               &kp TAB   &td_a    &td_o    &td_e    &td_u      &td_i                 &kp LEFT  &none      &kp RIGHT   &kp D        &kp H     &kp T   &td_n  &td_s  &kp ENTER
               &td_SHFT  &td_sc   &kp Q    &kp J    &td_k      &td_x       &kp C_PP            &kp DOWN               &kp B        &kp M     &kp W   &td_v  &td_z  &kp RSHIFT
                                           &tog 1   &kp LCTRL  &lt 3 LGUI                                             &lt 3 SPACE  &kp RALT  &tog 2
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
         };

         // FN | SYM | NUM
         lower_layer {
            display-name = "FnSyNu";
            bindings = <
               &kp F1      &kp F2    &kp F3  &kp F4    &kp F5     &kp F6                           &kp PG_UP            &kp F7       &kp F8    &kp F9     &kp F10   &kp F11   &kp F12
               &kp TAB     &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT              &kp HOME  &none      &kp END   &kp CARET    &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &kp INS
               &kp LSHIFT  &kp N1    &kp N2  &kp N3    &kp N4     &kp N5     &kp C_MUTE            &kp PG_DN            &kp N6       &kp N7    &kp N8     &kp N9    &kp N0    &kp DEL
                                             &tog 1    &kp LCTRL  &lt 3 LGUI                                            &lt 3 SPACE  &kp RALT  &kp K_APPLICATION
            >;
            sensor-bindings = <&inc_dec_kp C_PREV C_NEXT>;
         };

         // COMBOS | OPERADORES
         raise_layer {
            display-name = "ComOpe";
            bindings = <
               &kp ESC  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &none   &none                            &mmv MOVE_UP                &kp LBRC   &kp RBRC   &kp UNDER  &kp PLUS   &kp SLASH  &kp BSPC
               &none    &mkp LCLK        &mkp MCLK       &mkp RCLK        &none   &none            &mmv MOVE_LEFT  &none      &mmv MOVE_RIGHT  &kp LBKT   &kp RBKT   &kp MINUS  &kp EQUAL  &kp BSLH   &kp ENTER
               &none    &none            &none           &none            &none   &none  &kp C_PP                  &mmv MOVE_DOWN              &kp GRAVE  &kp TILDE  &mac_oq    &kp QMARK  &kp PIPE   &none
                                                         &none            &none   &kp SPACE                                                    &kp ENTER  &none      &tog 2
            >;
            sensor-bindings = <&scroll_encoder>;
         };

         // =========================
         // Capa SISTEMA / MANTENIMIENTO
         // =========================
         layer_3 {
            display-name = "SYSTEM";
            bindings = <
               &none  &none  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR                     &mmv MOVE_UP                &bt BT_CLR_ALL  &none         &bt BT_CLR    &none         &none  &sys_reset
               &none  &none  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI &rgb_ug RGB_BRD  &none               &mmv MOVE_LEFT  &mkp LCLK  &mmv MOVE_RIGHT  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none  &bootloader
               &none  &none  &none            &none           &none            &out OUT_USB     &kp C_PP           &mmv MOVE_DOWN              &out OUT_BLE    &none         &none         &none         &none  &studio_unlock
                                              &none           &none            &none                                                           &none           &none         &none
            >;
            sensor-bindings = <&scroll_encoder>;
         };
      };
   };