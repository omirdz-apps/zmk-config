#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // antes 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25    // antes 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// Escaladores de movimiento y scroll
&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };
&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

// Scroll config
&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <100>;
    delay-ms = <0>;
};

// Mouse move config
&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

// Apagado suave
&soft_off { hold-time-ms = <2000>; };

// =========================
// BEHAVIORS
// =========================
/ {
      behaviors {
         // Shift / Caps
         td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
         };

         td_a: td_a {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tap-count = <2>;
            flavor = "tap-preferred";
            bindings = 
               <&kp A>
               ,<&macro_acent_a>;
         };

         td_e: td_e {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tap-count = <2>;
            flavor = "tap-preferred";
            bindings = 
               <&kp E>
               ,<&macro_acent_e>;
         };

         td_i: td_i {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tap-count = <2>;
            flavor = "tap-preferred";
            bindings = 
               <&kp I>
               ,<&macro_acent_i>;
         };

         td_o: td_o {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tap-count = <2>;
            flavor = "tap-preferred";
            bindings = 
               <&kp O>
               ,<&macro_acent_o>;
         };

         td_u: td_u {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tap-count = <2>;
            flavor = "tap-preferred";
            bindings = 
               <&kp U>
               ,<&macro_acent_u>;
         };

         td_n_enhe: td_n_enhe {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tap-count = <2>;
            flavor = "tap-preferred";
            bindings = 
               <&kp N>
               ,<&macro_enhe>;
         };

         // // Win + Shift + S
         td_win_shift_s: td_win_shift_s {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_WIN_SHIFT_S";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp S>, <&mac_win_shift_s>;
         };

         // // Win + L
         td_win_l: td_win_l {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_WIN_L";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp L>, <&mac_win_l>;
         };

         // // Win + V
         td_win_v: td_win_v {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_WIN_V";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp V>, <&mac_win_v>;
         };
      };

      macros {
         macro_acent_a: macro_acent_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = 
               <&macro_press    &kp LALT>
               ,<&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N5>
               ,<&macro_release &kp LALT>;
         };

         macro_acent_e: macro_acent_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = 
               <&macro_press    &kp LALT>
               ,<&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N3>
               ,<&macro_release &kp LALT>;
         };

         macro_acent_i: macro_acent_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = 
               <&macro_press    &kp LALT>
               ,<&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7>
               ,<&macro_release &kp LALT>;
         };

         macro_acent_o: macro_acent_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = 
               <&macro_press    &kp LALT>
               ,<&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N3>
               ,<&macro_release &kp LALT>;
         };

         macro_acent_u: macro_acent_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = 
               <&macro_press    &kp LALT>
               ,<&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N0>
               ,<&macro_release &kp LALT>;
         };

         macro_enhe: macro_enhe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = 
               <&macro_press    &kp LALT>
               ,<&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N1>
               ,<&macro_release &kp LALT>;
         };
 
         /* Win + Shift + S */
         mac_win_shift_s: mac_win_shift_s {
            compatible = "zmk,behavior-macro";
            label = "Win+Shift+S";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press    &kp LGUI>
               ,<&macro_press   &kp LSFT>
               ,<&macro_tap     &kp S>
               ,<&macro_release &kp LSFT>
               ,<&macro_release &kp LGUI>;
         };

         /* Win + L */
         mac_win_l: mac_win_l {
            compatible = "zmk,behavior-macro";
            label = "Win+L";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
               <&macro_press    &kp LGUI>
               ,<&macro_tap     &kp L>
               ,<&macro_release &kp LGUI>;
         };

         /* Win + V */
         mac_win_v: mac_win_v {
            compatible = "zmk,behavior-macro";
            label = "Win+V";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = 
               <&macro_press    &kp LGUI>
               ,<&macro_tap     &kp V>
               ,<&macro_release &kp LGUI>;
         };
      };

      // =========================
      // ENCODERS
      // =========================
      rgb_encoder: rgb_encoder {
         compatible = "zmk,behavior-sensor-rotate";
         #sensor-binding-cells = <0>;
         bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
      };

      scroll_encoder: scroll_encoder {
         compatible = "zmk,behavior-sensor-rotate";
         #sensor-binding-cells = <0>;
         bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
         tap-ms = <100>;
      };

      // =========================
      // COMBOS
      // =========================
      combos {
         compatible = "zmk,combos";

         softoff {
               bindings = <&soft_off>;
               key-positions = <1 15 29>;
         };
      };

    // =========================
    // KEYMAP
    // =========================
    keymap {
        compatible = "zmk,keymap";

        // Capa base DVORAK
        default_layer {
            display-name = "DVORAK";
            bindings = <
                &kp ESC  &kp SQT   &kp COMMA  &kp DOT  &kp P      &kp Y                             &kp UP                &kp F        &kp G     &kp C   &kp R       &td_win_l         &kp BSPC
                &kp TAB  &td_a     &td_o      &td_e    &td_u      &td_i                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp D        &kp H     &kp T   &td_n_enhe  &td_win_shift_s   &kp LGUI
                &td0     &kp SEMI  &kp Q      &kp J    &kp K      &kp X        &kp C_PP             &kp DOWN              &kp B        &kp M     &kp W   &td_win_v   &kp Z             &kp RSHIFT
                                          &tog 1   &kp LCTRL  &lt 3 SPACE                                                 &lt 3 ENTER  &kp RALT  &tog 2
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        // FN | SYM | NUM
        lower_layer {
            display-name = "FnSyNu";
            bindings = <
                &kp F1     &kp F2     &kp F3  &kp F4    &kp F5    &kp F6                               &mmv MOVE_UP                  &kp F7     &kp F8    &kp F9     &kp F10   &kp F11   &kp F12
                &kp PG_UP  &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT            &mmv MOVE_LEFT  &mkp LCLK   &mmv MOVE_RIGHT   &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &kp INS
                &kp PG_DN  &kp N1     &kp N2  &kp N3    &kp N4    &kp N5     &kp C_PP                  &mmv MOVE_DOWN                &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp DEL
                                          &trans    &kp HOME  &kp SPACE                                                              &kp ENTER  &kp END   &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        // COMBOS | OPERADORES
        raise_layer {
            display-name = "ComOpe";
            bindings = <
                &kp ESC  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &none  &none                            &mmv MOVE_UP                &kp UNDER  &kp MINUS  &kp PLUS  &kp EQUAL  &kp SLASH  &kp BSPC
                &none    &none            &none           &none            &none  &none            &mmv MOVE_LEFT  &mkp LCLK  &mmv MOVE_RIGHT  &kp LBKT   &kp LBRC   &kp RBRC  &kp RBKT   &kp BSLH   &none
                &none    &none            &none  &kp C_PREV  &kp C_MUTE    &kp C_NEXT    &kp C_PP                  &mmv MOVE_DOWN              &kp TILDE  &kp GRAVE  &kp PIPE  &mkp LCLK  &mkp MCLK  &mkp RCLK
                                                 &trans      &trans        &kp SPACE                                                           &kp ENTER  &kp K_APPLICATION  &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        // =========================
        // Capa SISTEMA / MANTENIMIENTO
        // =========================
        layer_3 {
            display-name = "SYSTEM";
            bindings = <
                &none  &none  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR                     &mmv MOVE_UP                &bt BT_CLR_ALL  &bt BT_CLR    &bt BT_SEL 0  &none  &none  &sys_reset
                &none  &none  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI &rgb_ug RGB_BRD  &none               &mmv MOVE_LEFT  &mkp LCLK  &mmv MOVE_RIGHT  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &none  &none  &bootloader
                &none  &none  &none            &none           &none            &out OUT_USB     &kp C_PP           &mmv MOVE_DOWN              &out OUT_BLE    &none         &none         &none  &none  &studio_unlock
                                           &trans          &trans           &tog 0                                                              &tog 0          &trans        &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};